def config = {
	localProperties {
		property 'baiduApiKey', ''
		property 'website.powertools.http', 'http://powertools.local:9001/yb2bacceleratorstorefront'
		property 'website.powertools.https', 'https://powertools.local:9002/yb2bacceleratorstorefront'
		}

		extensions {
				extName 'mcc'
				extName 'backoffice'
				extName 'commercesearchbackoffice'
				extName 'b2bcommercebackoffice'
				extName 'commerceservicesbackoffice'
				extName 'solrfacetsearchbackoffice'
				extName 'b2badmincockpit'

				extName 'yacceleratorcockpits'
				extName 'yacceleratorinitialdata'
				extName 'yacceleratorfulfilmentprocess'
				extName 'yaddon'
				extName 'ycommercewebservices'
		
				extName 'powertoolsstore'
				extName 'solrserver'
				
				extName 'acceleratorwebservicesaddon'
				extName 'chineseaddressaddon'
				extName 'chinesecommerceorgaddressaddon'
			    extName 'chineseaddressbackoffice'
				extName 'b2bacceleratoraddon'
				extName 'commerceorgaddon'
				
				extName 'customersupportbackoffice'

				extName 'rulebuilderbackoffice'
				extName 'couponbackoffice'
				extName 'droolsruleengineservices'
				extName 'couponfacades'
				extName 'promotionenginesamplesaddon'

				extName 'chinesestoreaddon'
		}
}

task setup << {
  	apply plugin: 'installer-platform-plugin'
  	apply plugin: 'installer-addon-plugin'
  	def pl = platform(config)
  	pl.setup()
	
  	pl.executeAntTarget 'extgen -Dinput.template=yacceleratorstorefront -Dinput.name=yb2bacceleratorstorefront -Dinput.package=de.hybris.platform.yb2bacceleratorstorefront'
	
  	pl.extensions {
  		extName 'yb2bacceleratorstorefront'
  	}
  	pl.setup()
	
  	pl.project.addons {
  			names "chineseaddressaddon,chinesecommerceorgaddressaddon,b2bacceleratoraddon,commerceorgaddon,promotionenginesamplesaddon,chinesestoreaddon"
  			template "yacceleratorstorefront"
  			storeFronts "yb2bacceleratorstorefront"
  			platform pl
  	}

  	pl.project.addons {
  			names "acceleratorwebservicesaddon"
  			template "ycommercewebservices"
  			storeFronts "ycommercewebservices"
  			platform pl
  	}
}

task initialize << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.build()
		pl.initialize()
}


task start << {
		apply plugin: 'installer-platform-plugin'
		def pl = platform(config)
		pl.start()
}
