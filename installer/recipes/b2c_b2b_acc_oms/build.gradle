apply plugin: 'installer-platform-plugin'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
    }
}

ext {
    workDir = "./work"
}

def config = {
    localProperties {
        '# place your custom properties into this file instead of modifying the project.properties'
        '# all properties in this file have higher priority and will overwrite the platform/project.properties settings.'

        property 'mykey', 'myvalue'
        property '#hac.webroot', '/hac'

        '# using higher memory settings (4G heap and 512 permgen) to prevent out of memory issues on tcserver'
        property 'tomcat.generaloptions', '-Xmx4096M -XX:-UseLoopPredicate -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -ea -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true -Djava.endorsed.dirs="%CATALINA_HOME%/lib/endorsed" -Dcatalina.base=%CATALINA_BASE% -Dcatalina.home=%CATALINA_HOME% -Dfile.encoding=UTF-8 -Dlog4j.configuration=log4j_init_tomcat.properties -Djava.util.logging.config.file=jdk_logging.properties -Djava.io.tmpdir="${HYBRIS_TEMP_DIR}"'

        property 'standalone.javaoptions', '-Xmx2040M -XX:MaxPermSize=512M -XX:+HeapDumpOnOutOfMemoryError -ea -XX:-UseLoopPredicate'

	property 'website.electronics.http', 'http://electronics.local:9001/yacceleratorstorefront'
	property 'website.electronics.https', 'https://electronics.local:9002/yacceleratorstorefront'
	property 'website.apparel-de.http', 'http://apparel-de.local:9001/yacceleratorstorefront'
	property 'website.apparel-de.https', 'https://apparel-de.local:9002/yacceleratorstorefront'
	property 'website.apparel-uk.http', 'http://apparel-uk.local:9001/yacceleratorstorefront'
	property 'website.apparel-uk.https', 'https://apparel-uk.local:9002/yacceleratorstorefront'
	property 'website.powertools.http', 'http://powertools.local:9001/yb2bacceleratorstorefront'
	property 'website.powertools.https', 'https://powertools.local:9002/yb2bacceleratorstorefront'
    }

    extensions {
        extName 'ordermanagementaddon'
        extName 'ordermanagementfacade'
        extName 'ordermanagementwebservices'

        extName 'warehousing'
        extName 'warehousingbackoffice'
        extName 'warehousingfacade'
        extName 'warehousingwebservices'

	extName 'instore'

        extName 'mcc'
        extName 'backoffice'
        extName 'commercesearchbackoffice'
        extName 'b2bcommercebackoffice'
        extName 'commerceservicesbackoffice'
        extName 'solrfacetsearchbackoffice'
        extName 'b2badmincockpit'
        
        extName 'yacceleratorcockpits'
        extName 'yacceleratorinitialdata'
        extName 'yacceleratorordermanagement'
        extName 'yacceleratorstorefront'
        extName 'yaddon'
        extName 'ycommercewebservices'
        
        extName 'apparelstore'
        extName 'electronicsstore'
        extName 'powertoolsstore'
        extName 'solrserver'

        extName 'acceleratorwebservicesaddon'
        extName 'b2bacceleratoraddon'
        extName 'commerceorgaddon'
                                        
        extName 'assistedservicestorefront'
        extName 'customerticketingaddon'
        extName 'customersupportbackoffice'
        extName 'ticketsystembackoffice'
        
        extName 'rulebuilderbackoffice'
        extName 'couponbackoffice'
        extName 'droolsruleengineservices'
        extName 'couponfacades'
        extName 'promotionenginesamplesaddon'
    }
}

task setup << {
    apply plugin: 'installer-platform-plugin'
    apply plugin: 'installer-addon-plugin'

    def pl = platform(config)
    pl.setup()

    pl.executeAntTarget 'extgen -Dinput.template=yacceleratorstorefront -Dinput.name=yb2bacceleratorstorefront -Dinput.package=de.hybris.platform.yb2bacceleratorstorefront'

    pl.extensions {
        extName 'yb2bacceleratorstorefront'
    }
    pl.setup()

    pl.project.addons {
        names "b2bacceleratoraddon,commerceorgaddon,assistedservicestorefront,customerticketingaddon,promotionenginesamplesaddon"
        template "yacceleratorstorefront"
        storeFronts "yb2bacceleratorstorefront"
        platform pl
    }

    pl.project.addons {
        names "assistedservicestorefront,customerticketingaddon,promotionenginesamplesaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform pl
    }

    pl.project.addons {
        names "acceleratorwebservicesaddon"
        template "ycommercewebservices"
        storeFronts "ycommercewebservices"
        platform pl
    }

    pl.project.addons {
        names "ordermanagementaddon"
        template "yacceleratorstorefront"
        storeFronts "yacceleratorstorefront"
        platform pl
    }
}

task initialize << {
    def thePlatform = platform(config)
    thePlatform.build()
    thePlatform.initialize()
}

task start << {
    def thePlatform = platform(config)
    thePlatform.start()
}

